version: '3.8'

services:
  backend:
    build: ./backend
    container_name: ai-news-backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app
    restart: unless-stopped
    networks:
      - ai-news-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    container_name: ai-news-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
    restart: unless-stopped
    networks:
      - ai-news-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  certbot:
    image: certbot/certbot
    container_name: ai-news-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
    depends_on:
      - frontend
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email --staging -d your-domain.com
    networks:
      - ai-news-network

networks:
  ai-news-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  certbot-etc:
    driver: local
  certbot-var:
    driver: local
  web-root:
    driver: local